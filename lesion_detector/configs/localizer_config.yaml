data_dir: "../data"
metadata_path: "../data/deeplesion_metadata.csv"

environment:
  render: false
  max_steps: 100                        # Max steps the agent can take before the episode ends
  bbox_move_step_factor: 0.1
  bbox_resize_factor: 0.1
  initial_bbox_width: 50
  initial_bbox_height: 50
  min_bbox_length: 10                   # Minimal bounding box width/height
  iou_threshold: 0.7

  reward:
    alpha: 5.0                          # Weight of the IoU reward component
    beta: 1.0                           # Weight of the center distance reward component 
    step_penalty: -1
    iou_final_reward: 10.0              # Additional, big reward on finishing step, when IoU >= threshold

agent:
  learning_rate: 0.0001
  gamma: 0.99                           # discount factor
  epsilon_start: 1.0
  epsilon_end: 0.1
  epsilon_decay: 20  # 10000
  replay_buffer_size: 100000
  image_cache_size: 100                 # == replay_buffer_size / (train_episodes * max_steps)
  target_update_steps: 10               # number of steps after which the target network is updated
  batch_size: 2 # 64

train:
  train_episodes: 1000
  log_interval: 10                      # print/log progress every X episodes
  save_interval: 50                     # chackpoint model every X episodes
  output_dir: "../runs/localizer/logs"  # path for saving logs, checkpoints etc.

test:
  test_episodes: 20
  model_checkpoint: "../runs/localizer/checkpoints/agent_lastest.pt"

logging:
  level: INFO
  format: "(%(asctime)s) %(name)s [%(levelname)s]: %(message)s"
  datefmt: "%Y-%m-%d %H:%M:%S"